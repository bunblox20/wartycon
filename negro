-- // Interfaz principal
local OrionLib = loadstring(game:HttpGet("https://raw.githubusercontent.com/shlexware/Orion/main/source"))()
local Window = OrionLib:MakeWindow({
    Name = "Teleport & Aimbot",
    HidePremium = false,
    SaveConfig = true,
    ConfigFolder = "TeleportAimbotConfig"
})

-- // Variables generales
local Environment = getgenv().Aimbot or {}
getgenv().Aimbot = Environment
local Settings = Environment.Settings or {}
local FOVSettings = Environment.FOVSettings or {}

-- // Inicializar Configuración Predeterminada
Environment.Settings = Settings
Settings.Enabled = true
Settings.TeamCheck = false
Settings.AliveCheck = true
Settings.WallCheck = false
Settings.Sensitivity = 0
Settings.ThirdPerson = false
Settings.ThirdPersonSensitivity = 3
Settings.TriggerKey = "MouseButton2"
Settings.Toggle = false
Settings.LockPart = "Head"

Environment.FOVSettings = FOVSettings
FOVSettings.Enabled = true
FOVSettings.Visible = true
FOVSettings.Amount = 90
FOVSettings.Color = Color3.fromRGB(255, 255, 255)
FOVSettings.LockedColor = Color3.fromRGB(255, 70, 70)
FOVSettings.Transparency = 0.5
FOVSettings.Sides = 60
FOVSettings.Thickness = 1
FOVSettings.Filled = false

-- // Variables locales
local Camera = workspace.CurrentCamera
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer

Environment.FOVCircle = Drawing.new("Circle")
Environment.FOVCircle.Visible = false

local function updateFOVCircle()
    if FOVSettings.Enabled then
        local circle = Environment.FOVCircle
        circle.Radius = FOVSettings.Amount
        circle.Thickness = FOVSettings.Thickness
        circle.Filled = FOVSettings.Filled
        circle.NumSides = FOVSettings.Sides
        circle.Color = FOVSettings.Color
        circle.Transparency = FOVSettings.Transparency
        circle.Visible = FOVSettings.Visible
        circle.Position = Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y)
    else
        Environment.FOVCircle.Visible = false
    end
end

-- // Función para cancelar el lock
local function CancelLock()
    Environment.Locked = nil
    Environment.FOVCircle.Color = FOVSettings.Color
end

-- // Obtener el jugador más cercano
local function GetClosestPlayer()
    if not Environment.Locked then
        local requiredDistance = FOVSettings.Enabled and FOVSettings.Amount or math.huge

        for _, player in ipairs(Players:GetPlayers()) do
            if player ~= LocalPlayer then
                local character = player.Character
                local lockPart = character and character:FindFirstChild(Settings.LockPart)

                if lockPart and character:FindFirstChildOfClass("Humanoid") then
                    local humanoid = character:FindFirstChildOfClass("Humanoid")
                    if Settings.TeamCheck and player.Team == LocalPlayer.Team then continue end
                    if Settings.AliveCheck and humanoid.Health <= 0 then continue end

                    local vector, onScreen = Camera:WorldToViewportPoint(lockPart.Position)
                    local distance = (Vector2.new(UserInputService:GetMouseLocation().X, UserInputService:GetMouseLocation().Y) - Vector2.new(vector.X, vector.Y)).Magnitude

                    if distance < requiredDistance and onScreen then
                        requiredDistance = distance
                        Environment.Locked = player
                    end
                end
            end
        end
    end
end

-- // Ciclo principal del Aimbot
local function AimbotLoop()
    if Environment.Locked and Settings.Enabled then
        local lockPart = Environment.Locked.Character and Environment.Locked.Character:FindFirstChild(Settings.LockPart)
        if lockPart then
            local vector = Camera:WorldToViewportPoint(lockPart.Position)

            if Settings.ThirdPerson then
                local xSensitivity = Settings.ThirdPersonSensitivity or 1
                local ySensitivity = Settings.ThirdPersonSensitivity or 1
                mousemoverel((vector.X - UserInputService:GetMouseLocation().X) * xSensitivity, (vector.Y - UserInputService:GetMouseLocation().Y) * ySensitivity)
            else
                Camera.CFrame = CFrame.new(Camera.CFrame.Position, lockPart.Position)
            end

            Environment.FOVCircle.Color = FOVSettings.LockedColor
        else
            CancelLock()
        end
    end
end

game:GetService("RunService").RenderStepped:Connect(function()
    updateFOVCircle()
    if Settings.Enabled then
        GetClosestPlayer()
        AimbotLoop()
    end
end)

-- // Pestaña Aimbot
local AimbotTab = Window:MakeTab({
    Name = "Aimbot",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

AimbotTab:AddToggle({
    Name = "Activar Aimbot",
    Default = true,
    Callback = function(value)
        Settings.Enabled = value
    end
})

AimbotTab:AddToggle({
    Name = "Mostrar FOV",
    Default = true,
    Callback = function(value)
        FOVSettings.Visible = value
    end
})

AimbotTab:AddSlider({
    Name = "Radio del FOV",
    Min = 10,
    Max = 500,
    Default = 90,
    Increment = 1,
    Callback = function(value)
        FOVSettings.Amount = value
    end
})

AimbotTab:AddDropdown({
    Name = "Parte a Apuntar",
    Default = "Head",
    Options = {"Head", "Torso", "Left Arm", "Right Arm", "Left Leg", "Right Leg"},
    Callback = function(value)
        Settings.LockPart = value
    end
})

AimbotTab:AddButton({
    Name = "Reiniciar Configuración",
    Callback = function()
        Settings.Enabled = true
        Settings.TeamCheck = false
        Settings.AliveCheck = true
        Settings.WallCheck = false
        FOVSettings.Amount = 90
        FOVSettings.Visible = true
        Settings.LockPart = "Head"
    end
})

-- // Iniciar interfaz
OrionLib:Init()
